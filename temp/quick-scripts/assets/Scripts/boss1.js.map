{"version":3,"sources":["boss1.js"],"names":["Emitter","require","cc","Class","extends","Component","properties","maxHealth","default","serializable","_timerHit","prefabBullet","Prefab","healthBar","ProgressBar","timing","Label","nodeEndGame","Node","playerNode","start","moveIn","movingBoss","widthCanvas","Canvas","instance","node","getContentSize","width","widthBoss","moving","tween","to","x","scaleX","then","repeatForever","position","v2","call","actionHit","getComponent","Animation","play","hit","positionXBullet","positionYBullet","y","i","bulletBoss","instantiate","setPosition","parent","bulletNumber","deathBoss","totalTime","active","emit","stopAllActions","destroy","update","dt","getDamage","progress","opacity"],"mappings":"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","file":"boss1.js","sourceRoot":"../../../../assets/Scripts","sourcesContent":["const Emitter = require(\"EventsListener\")\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        maxHealth:{\n            default:1000,\n            serializable:false,\n        } ,\n        _timerHit: 0,\n        prefabBullet: cc.Prefab,\n        healthBar: cc.ProgressBar,\n        timing: cc.Label,\n        nodeEndGame: cc.Node,\n        playerNode: cc.Node\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    start () {\n        this.moveIn()\n    },\n\n    movingBoss(){\n        let widthCanvas = cc.Canvas.instance.node.getContentSize().width;\n        let widthBoss = this.node.width;\n\n        let moving = cc.tween()\n            .to(3, {x: widthCanvas/2 - widthBoss/2})\n            .to(0.01, {scaleX: -1})\n            .to(6, {x: -(widthCanvas/2 - widthBoss/2)})\n            .to(0.01, {scaleX: 1})\n            .to(3, {x: 0 })\n            cc.tween(this.node).then(moving).repeatForever().start();\n    },\n\n    moveIn(){\n        cc.tween(this.node)\n            .to(1,{position: cc.v2(-27,120)})\n            .call(()=>this.movingBoss())\n            .start()\n    },\n\n    actionHit(){\n        this.node.getComponent(cc.Animation).play(\"bossHit\");\n    },\n\n    hit(){\n        let positionXBullet = this.node.x - 80;\n        let positionYBullet = this.node.y - 80;\n        \n        for (let i = 1; i <= 4; i++) {\n            let bulletBoss = cc.instantiate(this.prefabBullet);\n            \n            bulletBoss.setPosition(positionXBullet, positionYBullet);\n            bulletBoss.parent = this.node.parent;\n            \n            if(i === 1){\n                positionYBullet -=80;\n            }\n            if(i === 3){\n                positionYBullet +=80;\n            }\n            positionXBullet +=80;\n\n            bulletBoss.getComponent('bulletBoss').bulletNumber = i;\n        }\n    },\n\n    deathBoss(){\n        let totalTime = this.timing.getComponent('updatingTime').totalTime;\n        this.nodeEndGame.active = true;\n        Emitter.instance.emit(\"endGame\", totalTime)\n        this.node.stopAllActions();\n        this.node.destroy();\n        this.playerNode.destroy();\n    },\n\n\n    update (dt){\n        this._timerHit+=dt;\n        if(this._timerHit > 1.5){\n            this.actionHit();\n            this._timerHit =0;\n        }\n    },\n\n    getDamage(){\n        this.healthBar.getComponent(cc.ProgressBar).progress= this.maxHealth/1000\n        if(this.maxHealth<= 0){\n            this.deathBoss()\n        }\n        cc.tween(this.node)\n            .to(0.1,{opacity:155})\n            .to(0.1,{opacity:255})\n            .to(0.1,{opacity:155})\n            .to(0.1,{opacity:255})\n            .to(0.1,{opacity:155})\n            .to(0.1,{opacity:255})\n            .start()\n    },\n\n});\n"]}