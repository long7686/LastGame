{"version":3,"sources":["enemyVerticalShoot.js"],"names":["Emitter","require","cc","Class","extends","Component","properties","moveToX","moveToY","prefabBullet","Prefab","_timerShoot","maxHealth","healthBar","ProgressBar","start","moving","randomAction","Math","random","tween","node","to","x","y","call","standingAction1","standingAction2","shoot","bulletPos","convertToWorldSpaceAR","position","convertToNodeSpaceAR","enemyBullet","instantiate","setPosition","parent","repeatForever","by","update","dt","dead","getDamage","getComponent","progress","instance","emit","destroy"],"mappings":";;;;;;AAAA,IAAMA,UAAUC,QAAQ,gBAAR,CAAhB;AACAC,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACRC,iBAAS,CADD;AAERC,iBAAS,CAFD;AAGRC,sBAAeP,GAAGQ,MAHV;AAIRC,qBAAa,CAJL;AAKRC,mBAAU,EALF;AAMRC,mBAAWX,GAAGY;AANN,KAHP;;AAYLC,SAZK,mBAYI;AACL,aAAKC,MAAL;AACH,KAdI;AAgBLA,UAhBK,oBAgBG;AAAA;;AACJ,YAAIC,eAAeC,KAAKC,MAAL,EAAnB;AACAjB,WAAGkB,KAAH,CAAS,KAAKC,IAAd,EACKC,EADL,CACQ,GADR,EACa,EAACC,GAAG,KAAKhB,OAAT,EAAkBiB,GAAG,KAAKhB,OAA1B,EADb,EAEKiB,IAFL,CAEU,YAAK;AACP,gBAAIR,eAAc,GAAlB,EAAsB;AAClB,sBAAKS,eAAL;AACH,aAFD,MAGI;AACA,sBAAKC,eAAL;AACH;AAEJ,SAVL,EAWKZ,KAXL;AAYH,KA9BI;AAgCLa,SAhCK,mBAgCE;AACH,YAAIC,YAAY,KAAKR,IAAL,CAAUS,qBAAV,CAAgC,KAAKT,IAAL,CAAUU,QAA1C,CAAhB;AACAF,oBAAY,KAAKR,IAAL,CAAUW,oBAAV,CAA+BH,SAA/B,CAAZ;;AAEA,YAAII,cAAc/B,GAAGgC,WAAH,CAAe,KAAKzB,YAApB,CAAlB;AACAwB,oBAAYE,WAAZ,CAAwBN,UAAUN,CAAlC,EAAqCM,UAAUL,CAA/C;AACAS,oBAAYG,MAAZ,GAAqB,KAAKf,IAAL,CAAUe,MAA/B;;AAEA;AACA;AAEH,KA3CI;AA6CLV,mBA7CK,6BA6CY;AACbxB,WAAGkB,KAAH,CAAS,KAAKC,IAAd,EACKgB,aADL,CAEQnC,GAAGkB,KAAH,CAAS,KAAKC,IAAd,EACKiB,EADL,CACQ,CADR,EACU,EAACf,GAAE,EAAH,EADV,EAEKe,EAFL,CAEQ,CAFR,EAEU,EAACf,GAAE,CAAC,EAAJ,EAFV,EAGKe,EAHL,CAGQ,CAHR,EAGU,EAACf,GAAE,EAAH,EAHV,CAFR,EAOKR,KAPL;AAQH,KAtDI;AAwDLY,mBAxDK,6BAwDY;AACbzB,WAAGkB,KAAH,CAAS,KAAKC,IAAd,EACKgB,aADL,CAEQnC,GAAGkB,KAAH,CAAS,KAAKC,IAAd,EACKiB,EADL,CACQ,CADR,EACU,EAACf,GAAE,CAAC,EAAJ,EADV,EAEKe,EAFL,CAEQ,CAFR,EAEU,EAACf,GAAE,EAAH,EAFV,EAGKe,EAHL,CAGQ,CAHR,EAGU,EAACf,GAAE,CAAC,EAAJ,EAHV,CAFR,EAOKR,KAPL;AAQH,KAjEI;AAmELwB,UAnEK,kBAmEGC,EAnEH,EAmEO;AACR,aAAK7B,WAAL,IAAmB6B,EAAnB;AACA,YAAG,KAAK7B,WAAL,IAAoB,CAAvB,EAAyB;AACrB,iBAAKiB,KAAL;AACA,iBAAKjB,WAAL,GAAkB,CAAlB;AACH;;AAED,YAAI,KAAKC,SAAL,IAAkB,CAAtB,EAAwB;AACpB,iBAAK6B,IAAL;AACH;AACJ,KA7EI;AA+ELC,aA/EK,uBA+EM;AACP,aAAK7B,SAAL,CAAe8B,YAAf,CAA4BzC,GAAGY,WAA/B,EAA4C8B,QAA5C,GAAsD,KAAKhC,SAAL,GAAe,EAArE;AACH,KAjFI;AAmFL6B,QAnFK,kBAmFC;AACFzC,gBAAQ6C,QAAR,CAAiBC,IAAjB,CAAsB,cAAtB;AACA,aAAKzB,IAAL,CAAU0B,OAAV;AACH;AAtFI,CAAT","file":"enemyVerticalShoot.js","sourceRoot":"../../../../assets/Scripts","sourcesContent":["const Emitter = require(\"EventsListener\")\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        moveToX: 0,\n        moveToY: 0, \n        prefabBullet : cc.Prefab,\n        _timerShoot: 0,\n        maxHealth:50,\n        healthBar: cc.ProgressBar\n    },\n\n    start () {\n        this.moving();\n    },\n\n    moving(){\n        let randomAction = Math.random()\n        cc.tween(this.node)\n            .to(1.5, {x: this.moveToX, y: this.moveToY})\n            .call(() =>{\n                if (randomAction >0.5){\n                    this.standingAction1()\n                }\n                else{\n                    this.standingAction2()\n                }\n\n            })\n            .start();\n    },\n\n    shoot(){\n        let bulletPos = this.node.convertToWorldSpaceAR(this.node.position);\n        bulletPos = this.node.convertToNodeSpaceAR(bulletPos);\n\n        let enemyBullet = cc.instantiate(this.prefabBullet);\n        enemyBullet.setPosition(bulletPos.x, bulletPos.y);\n        enemyBullet.parent = this.node.parent;\n        \n        // enemyBullet.getComponent('bulletVertical').bulletToX = bulletPos.x;\n        // enemyBullet.getComponent('bulletVertical').bulletToY = -this.node.parent.height;\n\n    },\n\n    standingAction1(){\n        cc.tween(this.node)\n            .repeatForever(\n                cc.tween(this.node)\n                    .by(1,{x:10})\n                    .by(2,{x:-20})\n                    .by(1,{x:10})\n            )\n            .start()\n    },\n\n    standingAction2(){\n        cc.tween(this.node)\n            .repeatForever(\n                cc.tween(this.node)\n                    .by(1,{x:-10})\n                    .by(2,{x:20})\n                    .by(1,{x:-10})\n            )\n            .start()\n    },\n\n    update (dt) {\n        this._timerShoot+= dt;\n        if(this._timerShoot >= 1){\n            this.shoot();\n            this._timerShoot= 0;\n        }\n\n        if (this.maxHealth <= 0){\n            this.dead();\n        }\n    },\n\n    getDamage(){\n        this.healthBar.getComponent(cc.ProgressBar).progress= this.maxHealth/50\n    },\n\n    dead(){\n        Emitter.instance.emit(\"countEnemies\")\n        this.node.destroy()\n    }\n});\n"]}