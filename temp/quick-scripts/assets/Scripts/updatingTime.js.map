{"version":3,"sources":["updatingTime.js"],"names":["cc","Class","extends","Component","properties","_timerUpdateTime","_timeStart","default","serializable","_timeNow","start","update","dt","updateTime","timeNow","result","toLocaleString","node","getComponent","Label","string","timeConvert","num","minutes","Math","round","seconds"],"mappings":";;;;;;AACAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACRC,0BAAkB,CADV;AAERC,oBAAY;AACRC,qBAAS,CADD;AAERC,0BAAc;AAFN,SAFJ;AAMRC,kBAAU;AACNF,qBAAS,CADH;AAENC,0BAAc;AAFR;AANF,KAHP;;AAeL;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAE,SAvCK,mBAuCE,CAEN,CAzCI;AA2CLC,UA3CK,kBA2CEC,EA3CF,EA2CK;AACN,aAAKP,gBAAL,IAAwBO,EAAxB;AACA,YAAG,KAAKP,gBAAL,GAAuB,CAA1B,EAA4B;AACxB,iBAAKI,QAAL,IAAgB,CAAhB;AACA,iBAAKI,UAAL,CAAgB,KAAKJ,QAArB;AACA,iBAAKJ,gBAAL,GAAuB,CAAvB;AACH;AACJ,KAlDI;AAoDLQ,cApDK,sBAoDMC,OApDN,EAoDc;AACf,YAAIC,SAAS,CAACD,UAAU,KAAKR,UAAhB,IAA6B,IAA1C;AACAS,iBAASA,OAAOC,cAAP,CAAsB,OAAtB,CAAT;AACA,aAAKC,IAAL,CAAUC,YAAV,CAAuBlB,GAAGmB,KAA1B,EAAiCC,MAAjC,GAA0C,KAAKC,WAAL,CAAiBN,MAAjB,CAA1C;AACH,KAxDI;AA0DLM,eA1DK,uBA0DOC,GA1DP,EA2DL;AACI,YAAIC,UAAUC,KAAKC,KAAL,CAAWH,MAAM,EAAjB,CAAd;AACA,YAAGC,UAAU,EAAb,EAAiBA,UAAU,MAAMA,OAAhB;AACjB,YAAIG,UAAUJ,MAAM,EAApB;AACA,YAAGI,UAAU,EAAb,EAAiBA,UAAU,MAAMA,OAAhB;AACjB,eAAOH,UAAU,GAAV,GAAgBG,OAAvB;AACH;AAjEI,CAAT","file":"updatingTime.js","sourceRoot":"../../../../assets/Scripts","sourcesContent":["\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        _timerUpdateTime: 0,\n        _timeStart: {\n            default: 0,\n            serializable: false,\n        },\n        _timeNow: {\n            default: 0,\n            serializable: false,\n        },\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    // start () {\n    //     this.timeStart = Date.parse(new Date(Date.now()));\n    // },\n\n    // updateTime(){\n    //     let timeNow = Date.parse(new Date(Date.now()));\n    //     let result = Math.abs(timeNow - this.timeStart);\n    //     result = result.toLocaleString('it-IT');\n    //     this.node.getComponent(cc.Label).string = this.timeConvert(result);\n    // },\n\n\n    // update (dt) {\n    //     this._timerUpdateTime += dt;\n    //     if(this._timerUpdateTime >= 1){\n    //         this.updateTime();\n    //         this._timerUpdateTime =0;\n    //     }\n    // },\n\n    start(){\n\n    },\n\n    update(dt){\n        this._timerUpdateTime +=dt;\n        if(this._timerUpdateTime >1){\n            this._timeNow +=1;\n            this.updateTime(this._timeNow);\n            this._timerUpdateTime =0;\n        }\n    },\n\n    updateTime(timeNow){\n        let result = (timeNow - this._timeStart) *1000;\n        result = result.toLocaleString('it-IT');\n        this.node.getComponent(cc.Label).string = this.timeConvert(result);\n    },\n\n    timeConvert(num)\n    { \n        let minutes = Math.round(num / 60);\n        if(minutes < 10) minutes = \"0\" + minutes\n        let seconds = num % 60;\n        if(seconds < 10) seconds = \"0\" + seconds\n        return minutes + \":\" + seconds;\n    },\n\n});\n"]}