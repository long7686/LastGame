{"version":3,"sources":["../../../../assets/Scripts/assets/Scripts/updatingTime.js"],"names":["Emitter","require","cc","Class","extends","Component","properties","_timerUpdateTime","_timeStart","default","serializable","_timeNow","_updating","totalTime","onLoad","instance","registerEvent","stopUpdateTime","bind","start","update","dt","updateTime","timeNow","result","toLocaleString","node","getComponent","Label","string","timeConvert","num","minutes","Math","floor","seconds"],"mappings":";;;;;;AAAA,IAAMA,UAAUC,QAAQ,gBAAR,CAAhB;AACAC,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACRC,0BAAkB,CADV;AAERC,oBAAY;AACRC,qBAAS,CADD;AAERC,0BAAc;AAFN,SAFJ;AAMRC,kBAAU;AACNF,qBAAS,CADH;AAENC,0BAAc;AAFR,SANF;AAURE,mBAAY,IAVJ;AAWRC,mBAAU;AAXF,KAHP;;AAiBLC,UAjBK,oBAiBK;AACNd,gBAAQe,QAAR,CAAiBC,aAAjB,CAA+B,SAA/B,EAA0C,KAAKC,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAA1C;AACH,KAnBI;AAqBLD,kBArBK,4BAqBY;AACb,aAAKL,SAAL,GAAiB,KAAjB;AACH,KAvBI;AAyBLO,SAzBK,mBAyBE,CAEN,CA3BI;AA6BLC,UA7BK,kBA6BEC,EA7BF,EA6BK;AACN,aAAKd,gBAAL,IAAwBc,EAAxB;AACA,YAAG,KAAKd,gBAAL,GAAuB,CAAvB,IAA4B,KAAKK,SAAL,KAAmB,IAAlD,EAAuD;AACnD,iBAAKD,QAAL,IAAgB,CAAhB;AACA,iBAAKW,UAAL,CAAgB,KAAKX,QAArB;AACA,iBAAKJ,gBAAL,GAAuB,CAAvB;AACH;AACJ,KApCI;AAsCLe,cAtCK,sBAsCMC,OAtCN,EAsCc;AACf,YAAIC,SAAS,CAACD,UAAU,KAAKf,UAAhB,IAA6B,IAA1C;AACAgB,iBAASA,OAAOC,cAAP,CAAsB,OAAtB,CAAT;AACA,aAAKZ,SAAL,GAAiBW,MAAjB;AACA;AACA,aAAKE,IAAL,CAAUC,YAAV,CAAuBzB,GAAG0B,KAA1B,EAAiCC,MAAjC,GAA0C,KAAKC,WAAL,CAAiBN,MAAjB,CAA1C;AACH,KA5CI;AA8CLM,eA9CK,uBA8COC,GA9CP,EA+CL;AACI,YAAIC,UAAUC,KAAKC,KAAL,CAAWH,MAAM,EAAjB,CAAd;AACA,YAAGC,UAAU,EAAb,EAAiBA,UAAU,MAAMA,OAAhB;AACjB,YAAIG,UAAUJ,MAAM,EAApB;AACA,YAAGI,UAAU,EAAb,EAAiBA,UAAU,MAAMA,OAAhB;AACjB,eAAOH,UAAU,GAAV,GAAgBG,OAAvB;AACH;AArDI,CAAT","file":"updatingTime.js","sourceRoot":"../../../../assets/Scripts","sourcesContent":["const Emitter = require(\"EventsListener\")\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        _timerUpdateTime: 0,\n        _timeStart: {\n            default: 0,\n            serializable: false,\n        },\n        _timeNow: {\n            default: 0,\n            serializable: false,\n        },\n        _updating : true,\n        totalTime:0,\n    },\n\n    onLoad () {\n        Emitter.instance.registerEvent(\"endGame\", this.stopUpdateTime.bind(this));\n    },\n\n    stopUpdateTime (){\n        this._updating = false;\n    },\n\n    start(){\n\n    },\n\n    update(dt){\n        this._timerUpdateTime +=dt;\n        if(this._timerUpdateTime >1 && this._updating === true){\n            this._timeNow +=1;\n            this.updateTime(this._timeNow);\n            this._timerUpdateTime =0;\n        }\n    },\n\n    updateTime(timeNow){\n        let result = (timeNow - this._timeStart) *1000;\n        result = result.toLocaleString('it-IT');\n        this.totalTime = result;\n        // cc.log(this.totalTime);\n        this.node.getComponent(cc.Label).string = this.timeConvert(result);\n    },\n\n    timeConvert(num)\n    { \n        let minutes = Math.floor(num / 60);\n        if(minutes < 10) minutes = \"0\" + minutes\n        let seconds = num % 60;\n        if(seconds < 10) seconds = \"0\" + seconds\n        return minutes + \":\" + seconds;\n    },\n\n});"]}